<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Black Budget Oscillograph</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/7.8.5/d3.min.js"></script>
    <style>
        body {
            font-family: 'Courier New', monospace;
            background: #0a0a0a;
            color: #00ff00;
            margin: 0;
            padding: 20px;
        }
        .dashboard {
            max-width: 1400px;
            margin: 0 auto;
        }
        h1 {
            text-align: center;
            color: #00ff00;
            text-shadow: 0 0 10px #00ff00;
            margin-bottom: 30px;
        }
        .grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 30px;
        }
        .panel {
            background: #111;
            border: 1px solid #00ff00;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 20px rgba(0,255,0,0.3);
        }
        .full-width {
            grid-column: 1 / -1;
        }
        canvas {
            max-height: 300px;
        }
        .resonance-map {
            height: 400px;
            position: relative;
        }
        .alert {
            background: #220000;
            border: 1px solid #ff0000;
            padding: 15px;
            margin: 10px 0;
            border-radius: 5px;
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0%, 100% { opacity: 0.8; }
            50% { opacity: 1; }
        }
        .metric {
            font-size: 2em;
            color: #ffff00;
            text-align: center;
            margin: 10px 0;
        }
        .timeline-event {
            padding: 10px;
            margin: 5px 0;
            background: #1a1a1a;
            border-left: 3px solid #00ff00;
        }
        select, button {
            background: #222;
            color: #00ff00;
            border: 1px solid #00ff00;
            padding: 8px;
            margin: 5px;
            cursor: pointer;
        }
        button:hover {
            background: #00ff00;
            color: #000;
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <h1>🛰️ BLACK BUDGET OSCILLOGRAPH 🛰️</h1>
        
        <div class="grid">
            <div class="panel">
                <h3>📈 Budget Anomaly Detection</h3>
                <canvas id="budgetChart"></canvas>
                <div class="metric" id="anomalyScore">Anomaly Score: 87.3</div>
            </div>
            
            <div class="panel">
                <h3>🌊 Narrative Resonance Index</h3>
                <canvas id="narrativeChart"></canvas>
                <div class="metric" id="resonanceIndex">Resonance: 0.92</div>
            </div>
            
            <div class="panel full-width">
                <h3>🎯 Predictive Correlation Matrix</h3>
                <div id="correlationMatrix" class="resonance-map"></div>
            </div>
            
            <div class="panel">
                <h3>⚠️ Active Alerts</h3>
                <div id="alerts">
                    <div class="alert">
                        <strong>HIGH PROBABILITY EVENT</strong><br>
                        Budget Spike Detected: +47% in PE 0603286E<br>
                        Expected Narrative Flare: 6-18 months<br>
                        Likely Domain: Hypersonic/Plasma Tech
                    </div>
                </div>
            </div>
            
            <div class="panel">
                <h3>📅 Timeline Correlations</h3>
                <div id="timeline">
                    <div class="timeline-event">
                        <strong>2024-Q3:</strong> DARPA "CRANE" funding +$2.3B<br>
                        <strong>2025-Q1:</strong> "Metallic Orbs" congressional hearing
                    </div>
                    <div class="timeline-event">
                        <strong>2023-Q2:</strong> Patent US11,234,567 (Plasma Propulsion)<br>
                        <strong>2024-Q4:</strong> "Tic-Tac" documentary release
                    </div>
                </div>
            </div>
            
            <div class="panel full-width">
                <h3>🔍 Query Interface</h3>
                <select id="techDomain">
                    <option>Select Technology Domain</option>
                    <option>Metamaterials</option>
                    <option>Directed Energy</option>
                    <option>Quantum Sensors</option>
                    <option>AI Swarm Systems</option>
                </select>
                <select id="timeframe">
                    <option>Timeframe</option>
                    <option>Last 6 months</option>
                    <option>Last 2 years</option>
                    <option>Last 5 years</option>
                </select>
                <button onclick="runAnalysis()">Run Resonance Analysis</button>
            </div>
        </div>
    </div>


    <script>
        // Budget Anomaly Chart
        const budgetCtx = document.getElementById('budgetChart').getContext('2d');
        const budgetChart = new Chart(budgetCtx, {
            type: 'line',
            data: {
                labels: ['2020', '2021', '2022', '2023', '2024', '2025'],
                datasets: [{
                    label: 'Black Budget Allocations ($B)',
                    data: [72, 78, 85, 97, 143, 156],
                    borderColor: '#00ff00',
                    backgroundColor: 'rgba(0,255,0,0.1)',
                    tension: 0.4
                }, {
                    label: 'Anomaly Threshold',
                    data: [80, 85, 90, 95, 100, 105],
                    borderColor: '#ff0000',
                    borderDash: [5, 5],
                    fill: false
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { labels: { color: '#00ff00' } }
                },
                scales: {
                    y: {
                        ticks: { color: '#00ff00' },
                        grid: { color: '#333' }
                    },
                    x: {
                        ticks: { color: '#00ff00' },
                        grid: { color: '#333' }
                    }
                }
            }
        });


        // Narrative Resonance Chart
        const narrativeCtx = document.getElementById('narrativeChart').getContext('2d');
        const narrativeChart = new Chart(narrativeCtx, {
            type: 'bar',
            data: {
                labels: ['NYT UFO', 'Grusch', 'AARO Report', 'Orb Videos', 'Disclosure Act'],
                datasets: [{
                    label: 'Media Intensity Score',
                    data: [67, 89, 45, 78, 92],
                    backgroundColor: [
                        'rgba(255,0,0,0.6)',
                        'rgba(255,255,0,0.6)',
                        'rgba(0,255,0,0.6)',
                        'rgba(255,165,0,0.6)',
                        'rgba(255,0,255,0.6)'
                    ],
                    borderColor: '#00ff00',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { labels: { color: '#00ff00' } }
                },
                scales: {
                    y: {
                        ticks: { color: '#00ff00' },
                        grid: { color: '#333' }
                    },
                    x: {
                        ticks: { color: '#00ff00' },
                        grid: { color: '#333' }
                    }
                }
            }
        });


        // D3 Correlation Matrix
        const width = document.getElementById('correlationMatrix').offsetWidth;
        const height = 400;
        
        const svg = d3.select('#correlationMatrix')
            .append('svg')
            .attr('width', width)
            .attr('height', height);


        // Sample correlation data
        const nodes = [
            {id: 'DARPA CRANE', type: 'budget', x: 100, y: 100},
            {id: 'Patent US11234567', type: 'patent', x: 300, y: 150},
            {id: 'Metallic Orbs Hearing', type: 'narrative', x: 500, y: 100},
            {id: 'Space Force RFP', type: 'budget', x: 200, y: 250},
            {id: 'Plasma Propulsion Patent', type: 'patent', x: 400, y: 300},
            {id: 'UFO Whistleblower', type: 'narrative', x: 600, y: 250}
        ];


        const links = [
            {source: 0, target: 2, strength: 0.9},
            {source: 1, target: 2, strength: 0.7},
            {source: 3, target: 5, strength: 0.8},
            {source: 4, target: 5, strength: 0.6}
        ];


        // Draw links
        svg.selectAll('line')
            .data(links)
            .enter()
            .append('line')
            .attr('x1', d => nodes[d.source].x)
            .attr('y1', d => nodes[d.source].y)
            .attr('x2', d => nodes[d.target].x)
            .attr('y2', d => nodes[d.target].y)
            .attr('stroke', d => d.strength > 0.7 ? '#ff0000' : '#00ff00')
            .attr('stroke-width', d => d.strength * 3)
            .attr('opacity', 0.6);


        // Draw nodes
        const nodeGroups = svg.selectAll('g')
            .data(nodes)
            .enter()
            .append('g')
            .attr('transform', d => `translate(${d.x}, ${d.y})`);


        nodeGroups.append('circle')
            .attr('r', 20)
            .attr('fill', d => {
                const colors = {budget: '#ff0000', patent: '#00ff00', narrative: '#ffff00'};
                return colors[d.type];
            })
            .attr('stroke', '#00ff00')
            .attr('stroke-width', 2);


        nodeGroups.append('text')
            .text(d => d.id)
            .attr('text-anchor', 'middle')
            .attr('y', 30)
            .attr('fill', '#00ff00')
            .style('font-size', '12px');


        // Animation loop
        function animate() {
            const time = Date.now() / 1000;
            
            // Pulse anomaly score
            const anomalyElement = document.getElementById('anomalyScore');
            const pulse = Math.sin(time * 2) * 0.1 + 0.9;
            anomalyElement.style.opacity = pulse;
            
            // Update resonance index
            const resonanceElement = document.getElementById('resonanceIndex');
            const resonance = (Math.sin(time * 1.5) * 0.05 + 0.92).toFixed(2);
            resonanceElement.textContent = `Resonance: ${resonance}`;
            
            requestAnimationFrame(animate);
        }
        animate();


        function runAnalysis() {
            alert('Analysis initiated. Check timeline for predictive correlations.');
        }
    </script>
</body>
</html>